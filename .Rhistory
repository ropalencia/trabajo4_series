reticulate::repl_python()
quit
knitr::opts_chunk$set(echo = FALSE)
reticulate::repl_python()
import matplotlib.pyplot as plt
import numpy as np
quit
library(reticulate)
valores <- np.random.randn(5)
valores <- np.arange(1,13)
reticulate::repl_python()
help((np.random.randn())
help((np.random.randn
help(np.random.randn)
valores = np.random.randn(30)
valores
help(np.random.randn)
valores = np.random.randn(30) + np.random.randint(30)
valores
#help(np.random.randn)
valores = np.random.randn(30) + np.random.randint(30)
valores
#help(np.random.randn)
valores = np.random.randn(30) + np.random.randint(30)
valores
valores = np.random.randn(30) + np.random.randint(30)
valores
len(valores)
plt.plot(valores)
plt.show()
plt.plot(valores)
plt.show()
quit
valores <- rnorm(30) + runif(30)
valores <- rnorm(30) + runif(30)
reticulate::repl_python()
plt.plot(r.valores)
plt.main
plt.show()
quit
valores <- rnorm(30) + runif(30)
reticulate::repl_python()
plt.plot(r.valores)
plt.main
plt.show()
quit
valores <- rnorm(30) + runif(30)
reticulate::repl_python()
#plt.main
plt.show()
plt.plot(r.valores)
#plt.main
plt.show()
quit
rm(valores)
rm(py$valores)
reticulate::repl_python()
View(valores)
del valores
quit
valores <- rnorm(30) + runif(30)
length(valores)
reticulate::repl_python()
plt.plot(r.valores)
plt.show()
quit
set.seed(123)
valores <- rnorm(30) + runif(30)
reticulate::repl_python()
plt.plot(r.valores)
plt.show()
quit
quit
set.seed(123)
valores <- rnorm(30) + runif(30)
reticulate::repl_python()
plt.plot(r.valores)
plt.show()
import seaborn as sns
quit
x <- 1:30
y <- 1:30 + rnorm(30)
x;y
x
y
x
y
reticulate::repl_python()
sns.regplot(x=r.x, y=r.y)
sns.show()
sns.regplot(x=r.x, y=r.y)
sns.regplot(x=r.x, y=r.y)
sns.show()
sns.regplot(x=r.x, y=r.y)
sns.regplot(x=r.x, y=r.y)
a =sns.regplot(x=r.x, y=r.y)
a
sns.regplot(x=r.x, y=r.y)
plt.show()
quit
set.seed(123)
x <- 1:30
y <- 1:30# + rnorm(30)
reticulate::repl_python()
sns.regplot(x=r.x, y=r.y)
plt.show()
quit
set.seed(123)
x <- 1:30
y <- 1:30
reticulate::repl_python()
sns.regplot(x=r.x, y=r.y)
plt.show()
x <- 1:30
x <- np.arange(1,31)
y <- np.arange(1,31) + np.random.randn(30)
sns.regplot(x=x, y=y)
plt.show()
x = np.arange(1,31)
y = np.arange(1,31) + np.random.randn(30)
sns.regplot(x=x, y=y)
plt.show()
quit
library(reticulate)
reticulate::repl_python()
x = np.arange(1,31)
y = np.arange(1,31) + np.random.randn(30)
sns.regplot(x=x, y=y)
plt.show()
