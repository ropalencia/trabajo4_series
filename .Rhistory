library(stats)
require(forecast)
library(TSstudio)
library(tseries)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
View(GSPC)
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(serie)
serie %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
?auto.arima
#?auto.arima
# c("aicc", "aic", "bic")
modelo_arima <- auto.arima(serie$close, stepwise = F, approximation = F, ic = "aic")
modelo_arima2 <- auto.arima(serie$close, stepwise = F, approximation = F, ic = "bic")
modelo_arima3 <- auto.arima(serie$close, stepwise = F, approximation = F, ic = "aicc")# ARIMA(2, 1, 2)
modelo_arima
modelo_arima2
modelo_arima3
modelo_arima
modelo_arima2
modelo_arima3
nrow(serie)
serie_train <- serie_train[1:(nrow(serie) - 8),]
serie_train <- serie[1:(nrow(serie) - 8),]
length(serie_train)
ind = 1:(nrow(serie) - 8)
serie_train <- serie[ind,]
length(serie_train)
serie_test <- serie[-ind,]
length(serie_test)
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
#?auto.arima
modelo_arima <- auto.arima(serie_train, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima
modelo_arima2
modelo_arima3
modelo_arima
modelo_arima2
modelo_arima3
modelo_arima
modelo_arima2
modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
View(serie)
pronostico <- forecast(modelo_arima, h=8)
pronostico
pronostico <- forecast(modelo_arima, h=8)
pronostico
nrow(serie_test)
length(serie_test)
pronostico <- forecast(modelo_arima, h=length(serie_test))
pronostico
print(pronostico)
ind = 1:(nrow(GSPC) - 8)
ind
nrow(GSPC) - 8
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
nrow(serie_test)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
print(pronostico)
pronostico
pronostico$mean
pronostico$series
pronostico$lower
pronostico$upper
sqrt(mean((GSPC$close - pronostico$mean)^2))
sqrt(mean((serie_test$close - pronostico$mean)^2))
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(serie)
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=m,prediction.interval=T,level=0.95)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=8,prediction.interval=T,level=0.95)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=8,prediction.interval=T,level=0.95)
tail(GSPC)
tail(GSPC, 5)
View(serie)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
summary(SEH)
SEH$coefficients
SEH$gamma
SEH$SSE
SEH$fitted
SEH$coefficients
3987.4828047 + 0.2719881
3987.4828047 + 0.2719881*2
3987.4828047 + 0.2719881*3
3987.4828047 + 0.2719881*4
3987.4828047 + 0.2719881*5
3987.4828047 + 0.2719881*100
serie[-1,]
serie[-1]
tail(serie,4)
tail(serie)
SEH$coefficients
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
SEH$coefficients
View(serie)
delta <- seq(0.1, 0.9, 0.1)
aic_1 <- vector()
ljungbox1 <- vector()
normalidad <- vector()
i = 0
for(d in delta){
i = i+1
modelo_outl <- tso(serie, delta=d)
aic_1[i] <- modelo_outl$fit$bic
ljungbox1[i] <- checkresiduals(modelo_outl$fit,
plot = FALSE)$p.value
normalidad[i] <- shapiro.test(modelo_outl$fit$residuals)$p.value
}
library(tsoutliers)
library(TSO)
library(TSA)
delta <- seq(0.1, 0.9, 0.1)
aic_1 <- vector()
ljungbox1 <- vector()
normalidad <- vector()
i = 0
for(d in delta){
i = i+1
modelo_outl <- tso(serie, delta=d)
aic_1[i] <- modelo_outl$fit$bic
ljungbox1[i] <- checkresiduals(modelo_outl$fit,
plot = FALSE)$p.value
normalidad[i] <- shapiro.test(modelo_outl$fit$residuals)$p.value
}
tso(serie, delta=0.7)
library(tibble)
rownames_to_column(serie)
View(serie)
serie %<>% rownames_to_column()
library(magrittr)
serie %<>% rownames_to_column()
View(serie)
tso(serie$close, delta=0.7)
help("rownames_to_column")
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie$close,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
SEH$coefficients
tso(serie$close, delta=0.7)
View(serie)
tso(serie, delta=0.7)
help(tso)
help(tso)
tso(serie$close, delta=0.7)
help(tso)
tso(serie$close, delta=0.7)
help(tso)
tso(serie$close, delta=0.7)
serie <- as.date(serie$fecha)
serie <- as.Date(serie$fecha)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie$close,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
SEH$coefficients
serie$fecha <- as.Date(serie$fecha)
tso(serie$close, delta=0.7)
sum(is.na(serie))
sum(any.na(serie))
sum(Any.na(serie))
sum(anyNA(serie))
class(serie$close)
class(ts(serie$close)
class(ts(serie$close))
cierre <- ts(serie$close)
class(cierre)
tso(cierre, delta=0.7)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=holt(serie$close, h = 5, initial = "optimal")
#En el pron´ostico para m periodos, con I.P del 95 %
SEH$model
forecast(SEH)
SEH$model
plot(serie$fecha, serie$close, ylab="candy production")
cierre <- ts(serie$close)
class(cierre)
delta <- seq(0.1, 0.9, 0.1)
aic_1 <- vector()
ljungbox1 <- vector()
normalidad <- vector()
i = 0
for(d in delta){
i = i+1
modelo_outl <- tso(cierre, delta=d)
aic_1[i] <- modelo_outl$fit$bic
ljungbox1[i] <- checkresiduals(modelo_outl$fit,
plot = FALSE)$p.value
normalidad[i] <- shapiro.test(modelo_outl$fit$residuals)$p.value
}
aic_1
ljungbox1
normalidad
normalidad
ljungbox1
aic_1
normalidad
ljungbox1
normalidad
mejor_modelo = tso(cierre, delta=0.5)
mejor_modelo
mejor_modelo$outliers
mejor_modelo$outliers
class(mejor_modelo$outliers)
View(mejor_modelo$outliers)
#View(mejor_modelo$outliers)
?outliers.effects()
newxreg <- outliers.effects(modelo_train2$outliers,
length(train_banco) + npred)
#View(mejor_modelo$outliers)
?outliers.effects()
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
#View(mejor_modelo$outliers)
# ?outliers.effects()
npred = 5
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
newxreg <- ts(newxreg[-seq_along(cierre),], start = 2018)
fore2 <- forecast(mejor_modelo$fit, h=5, xreg = newxreg)
fore2
class(fore2)
View(fore2)
fore2$mean
fore2$lower
fore2$upper
fore2$lower
fore2$upper
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(serie)
serie[544]
View(GSPC)
GSPC[544, 2]
GSPC[546, 2]
GSPC[549, 2]
GSPC[552, 2]
GSPC[554, 2]
GSPC[555, 2]
GSPC[560, 2]
GSPC[562, 2]
GSPC[569, 2]
GSPC[615, 2]
GSPC[1093, 2]
