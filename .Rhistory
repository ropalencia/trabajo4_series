library(TSA)
library(tibble)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie$close,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
SEH$coefficients
tso(serie$close, delta=0.7)
View(serie)
tso(serie, delta=0.7)
help(tso)
help(tso)
tso(serie$close, delta=0.7)
help(tso)
tso(serie$close, delta=0.7)
help(tso)
tso(serie$close, delta=0.7)
serie <- as.date(serie$fecha)
serie <- as.Date(serie$fecha)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '1995-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2009-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=HoltWinters(serie$close,gamma=FALSE)
#En el pron´ostico para m periodos, con I.P del 95 %
predict(SEH,n.ahead=5,prediction.interval=T,level=0.95)
SEH$coefficients
serie$fecha <- as.Date(serie$fecha)
tso(serie$close, delta=0.7)
sum(is.na(serie))
sum(any.na(serie))
sum(Any.na(serie))
sum(anyNA(serie))
class(serie$close)
class(ts(serie$close)
class(ts(serie$close))
cierre <- ts(serie$close)
class(cierre)
tso(cierre, delta=0.7)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
chart_Series(GSPC)
chart_Series(GSPC['2021-09/2022-11'])
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
#serie <- ts(serie, start=2009, frequency=12)
# desco <- decompose(serie, type="multiplicative")
# plot(desco)
#acf(serie)
#pacf(serie)
serie$close %>% adf.test() # no se rechaza H0, es decir, la serie no es estacionaria
serie$close %>% diff() %>% na.omit() %>% adf.test() # se rechaza H0, es decir, la serie diferenciada es estacionaria
ind = 1:(nrow(GSPC) - 8)
serie_train <- GSPC[ind,]
serie_test <- GSPC[-ind,]
#?auto.arima
modelo_arima <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aic") # ARIMA(2, 1, 2)
modelo_arima2 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "bic") # ARIMA(2, 1, 2)
modelo_arima3 <- auto.arima(serie_train$close, stepwise = F, approximation = F, ic = "aicc") # ARIMA(2, 1, 2)
modelo_arima
# modelo_arima2
# modelo_arima3
modelo_arima %>% checkresiduals(lag = 20)
pronostico <- forecast(modelo_arima, h=nrow(serie_test))
pronostico$mean
pronostico$lower
pronostico$upper
sqrt(mean((serie_test$close - pronostico$mean)^2))
#help("rownames_to_column")
serie = rownames_to_column(serie, var = "fecha")
#En el ajuste: Con ajuste ´optimo
SEH=holt(serie$close, h = 5, initial = "optimal")
#En el pron´ostico para m periodos, con I.P del 95 %
SEH$model
forecast(SEH)
SEH$model
plot(serie$fecha, serie$close, ylab="candy production")
cierre <- ts(serie$close)
class(cierre)
delta <- seq(0.1, 0.9, 0.1)
aic_1 <- vector()
ljungbox1 <- vector()
normalidad <- vector()
i = 0
for(d in delta){
i = i+1
modelo_outl <- tso(cierre, delta=d)
aic_1[i] <- modelo_outl$fit$bic
ljungbox1[i] <- checkresiduals(modelo_outl$fit,
plot = FALSE)$p.value
normalidad[i] <- shapiro.test(modelo_outl$fit$residuals)$p.value
}
aic_1
ljungbox1
normalidad
normalidad
ljungbox1
aic_1
normalidad
ljungbox1
normalidad
mejor_modelo = tso(cierre, delta=0.5)
mejor_modelo
mejor_modelo$outliers
mejor_modelo$outliers
class(mejor_modelo$outliers)
View(mejor_modelo$outliers)
#View(mejor_modelo$outliers)
?outliers.effects()
newxreg <- outliers.effects(modelo_train2$outliers,
length(train_banco) + npred)
#View(mejor_modelo$outliers)
?outliers.effects()
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
#View(mejor_modelo$outliers)
# ?outliers.effects()
npred = 5
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
newxreg <- ts(newxreg[-seq_along(cierre),], start = 2018)
fore2 <- forecast(mejor_modelo$fit, h=5, xreg = newxreg)
fore2
class(fore2)
View(fore2)
fore2$mean
fore2$lower
fore2$upper
fore2$lower
fore2$upper
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(serie)
serie[544]
View(GSPC)
GSPC[544, 2]
GSPC[546, 2]
GSPC[549, 2]
GSPC[552, 2]
GSPC[554, 2]
GSPC[555, 2]
GSPC[560, 2]
GSPC[562, 2]
GSPC[569, 2]
GSPC[615, 2]
GSPC[1093, 2]
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
?getSymbols
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE, end="2022-11-11")
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices", end = "2022-11-11")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(serie)
serie <- serie[1:1226]
serie <- serie[1:1226,]
cierre <- ts(serie$close)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
GSPC <- GSPC[1:1226,]
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
cierre <- ts(serie$close)
class(cierre)
mejor_modelo = tso(cierre, delta=0.5)
mejor_modelo
mejor_modelo$effects
summary(mejor_modelo){}
summary(mejor_modelo)
summary(mejor_modelo$outliers)
mejor_modelo %>% coeftest()
library(lmtest)
mejor_modelo %>% coeftest()
modelo1_mez <- arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
553 + 673
559 + 667
568 + 658
?arimax
modelo1_mez <- TSA::arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
modelo1_mez <- TSA::arima(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
modelo1_mez <- TSA::arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
modelo1_mez <- arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
modelo1_mez <- arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
#View(mejor_modelo$outliers)
# ?outliers.effects()
npred = 5
newxreg <- ts(newxreg[-seq_along(cierre),], start = 2018)
mejor_modelo = tso(cierre, delta=0.5)
mejor_modelo
#View(mejor_modelo$outliers)
# ?outliers.effects()
npred = 5
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
newxreg <- ts(newxreg[-seq_along(cierre),], start = 2018)
modelo1_mez <- arimax(cierre, order=c(0, 1, 0), seasonal = list(order = c(0, 0, 0)),
xtransf=data.frame(a = 1*(seq_along(cierre) == 544), #TC
b = 1*(seq_along(cierre) == 546), #TC
c = 1*(seq_along(cierre) == 549), # AO
d = 1*(seq_along(cierre) == 552), # TC
e = 1*c(rep(0,553),rep(1,673)), # LS
f = 1*(seq_along(cierre) == 555), # AO
g = 1*c(rep(0,559),rep(1,667)), # LS
h = 1*(seq_along(cierre) == 562), # AO
i = 1*c(rep(0,568),rep(1,658)), # LS
j = 1*(seq_along(cierre) == 615), # TC
k = 1*(seq_along(cierre) == 1093)), # TC
xreg = newxreg,
transfer=list(c(1, 0), c(1, 0),
c(0, 0), c(1, 0),
c(0, 0), c(0,0),
c(0,0), c(0,0),
c(0,0), c(1,0),
c(1,0)))
arimax(cierre, order = c(0,1,0), xreg = newxreg)
length(cierre)
length(newxreg)
View(newxreg)
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre) + npred)
View(newxreg)
newxreg <- outliers.effects(mejor_modelo$outliers,
length(cierre))
arimax(cierre, order = c(0,1,0), xreg = newxreg)
modelo = arimax(cierre, order = c(0,1,0), xreg = newxreg)
modelo %>% coeftest()
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
sin_hoy <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
sin_hoy <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
sin_hoy
View(sin_hoy)
sqrt((3988.072 - 3957.25))
MSE <- function(real, pred){
mean( (real-pred)ˆ2 )
MSE <- function(real, pred){
mean( (real-pred)^2 )
}
MAPE <- function(real, pred){
100 * mean( abs( (real-pred)/real) )
}
sqrt(MSE(3988.072, 3957.25))
MAPE(3988.072, 3957.25)
cierre[1:1226]
cierre[1226]
MAPE(3992.93, 3957.25)
sqrt(MSE(3992.93, 3957.25))
MAPE(3992.93, 3957.25)
sqrt(MSE(3992.93, 3957.25))
MAPE(3992.93, 3957.25)
sqrt(MSE(3988.72, 3957.25))
MAPE(3988.72, 3957.25)
sin_hoy[1227,]
sin_hoy[1227,]
View(sin_hoy)
sin_hoy[1227,c(2,6)]
uno <- sin_hoy[1227,c(2,6)]
uno
View(uno)
sqrt(MSE(3988.72, 3957.25))
MAPE(3988.72, 3957.25)
sqrt(MSE(3988.072, 3957.25))
MAPE(3988.072, 3957.25)
knitr::opts_chunk$set(echo = FALSE)
library(quantmod)
library(tidyquant)
library(tidyverse)
library(stats)
require(forecast)
library(TSstudio)
library(tseries)
library(tsoutliers)
library(TSA)
library(tibble)
getSymbols('^GSPC', from = '2018-01-01',warnings = FALSE, auto.assign = TRUE)
GSPC <- tq_get('^GSPC', from = "2018-01-01", get = "stock.prices")
serie <- GSPC %>%
dplyr::select(date, close)
serie <- serie %>% column_to_rownames(., var = "date")
View(GSPC)
reales <- c(3957.25, 3991.73)
reales <- c(3957.25, 3991.73)
pronosticados <- c(3992.93, 3992.93)
sqrt(mean((reales-pronosticados)^2))
100 * mean( abs( (reales-pronosticados)/reales) )
sqrt(mean((reales-pronosticados)^2))
100 * mean( abs( (reales-pronosticados)/reales) )
pronosticados_param <- c(3992.93, 3992.93)
sqrt(mean((reales-pronosticados_param)^2))
100 * mean( abs( (reales-pronosticados_param)/reales) )
pronosticados_no_param <- c(3988.072, 3989.273)
sqrt(mean((reales-pronosticados_no_param)^2))
100 * mean( abs( (reales-pronosticados_no_param)/reales) )
View(GSPC)
cosa
sample(1:3)
sample(1:2)
